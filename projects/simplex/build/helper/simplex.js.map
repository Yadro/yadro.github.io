{"version":3,"sources":["helper/simplex.ts"],"names":[],"mappings":"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","file":"helper/simplex.js","sourcesContent":["import {MatrixM, FractMatrix} from './matrix';\r\nimport Fraction = require('fraction');\r\nimport {FractionType} from 'fraction.js';\r\nimport {copyArr, getLastItem, getArrIndex} from \"./tools\";\r\nimport {PrintEquation} from \"../components/printEquation\";\r\n\r\nconst debugConf = {\r\n    debug: true,\r\n    debugRowCol: false,\r\n    debugRow: false\r\n};\r\n\r\ninterface IDebug {\r\n    m?: MatrixM;\r\n    p?: number[][];\r\n    text?;\r\n    select?;\r\n    equation?;\r\n    backup?: boolean;\r\n    isLastStep?: boolean;\r\n}\r\n\r\ninterface IPrintEquationVal {\r\n    [id: number]: PrintEquation;\r\n}\r\ninterface IdAndFractionType {\r\n    [id: number]: FractionType;\r\n}\r\n\r\nexport class Simplex {\r\n    /** по шагам */\r\n    bystep: boolean;\r\n    polynom: FractionType[];\r\n    polynomDirect: number;\r\n    originPolynomSize: number;\r\n    matrix: MatrixM;\r\n    debug: IDebug[] = [];\r\n\r\n    /**\r\n     * Номера элементов колонок\r\n     * нумерация с 1\r\n     */\r\n    head: number[];\r\n    /**\r\n     * Номера элементов строк\r\n     * нумерация с 1\r\n     */\r\n    left: number[];\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n    isLastStep = false;\r\n\r\n    /**\r\n     * @param polynom\r\n     * @param matrix матрица\r\n     * @param bystep\r\n     */\r\n    constructor(polynom: number[], matrix: MatrixM, bystep: boolean) {\r\n        console.clear();\r\n        this.bystep = bystep;\r\n\r\n        this.polynomDirect = polynom.pop();\r\n        this.polynom = polynom.map((e) => new Fraction(e));\r\n        this.originPolynomSize = polynom.length - 1;\r\n\r\n        this.matrix = matrix;\r\n        this.head = getArrIndex(1, matrix.width - 1);\r\n        this.left = getArrIndex(matrix.width, matrix.width + matrix.height - 1);\r\n\r\n        this.firstStep();\r\n        this.pushDebug();\r\n\r\n        this.debug.push({\r\n            text: 'Приводим задачу к каноническому виду:',\r\n            equation: this.polynomEquationAddMin(\r\n                this.polynomEquationAddFreeMember(\r\n                    this.createPolynomCoeffEquation(this.polynom)))\r\n        });\r\n        this.pushLog(this.matrix.matrix, [], 'Добавляем строку');\r\n    }\r\n\r\n    prev() {\r\n        for (let j = this.debug.length - 1; j >= 0; j--) {\r\n            let debug = this.debug.pop();\r\n            if (debug.backup && debug.backup === true && debug.m) {\r\n                this.restoreMatrixFromDebug(debug);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * пошаговое вычисление\r\n     * @param position\r\n     * @return {boolean} алгоритм завершен\r\n     */\r\n    next(position?) {\r\n        let status = this.checkValidSolution();\r\n        if (status === false) {\r\n            console.log('решение не допустимо');\r\n        }\r\n        const optimalSolution = this.checkOptimalSolution();\r\n        if (optimalSolution === false) {\r\n            console.log('решение не оптимально');\r\n        }\r\n        if (this.isLastStep && optimalSolution) {\r\n            this.showResult();\r\n            return true;\r\n        }\r\n\r\n        let pos;\r\n        if (typeof position === 'undefined') {\r\n            pos = this.findReference();\r\n        } else {\r\n            pos = {\r\n                y: position[0],\r\n                x: position[1]\r\n            };\r\n        }\r\n        if (!pos) {\r\n            this.debug.push({text: 'Невозможно найти опорный элемент'});\r\n            return true;\r\n        }\r\n        console.log(pos);\r\n        this.oneStep(pos);\r\n        this.pushLog(this.matrix.matrix, [], 'Пересчитываем таблицу:');\r\n\r\n        if (this.isLastStep === true) {\r\n            this.showResult();\r\n            return true;\r\n        } else if (this.matrix.height + this.matrix.width - 2 === this.originPolynomSize\r\n            && this.isLastStep === false) {\r\n            // последний шаг\r\n            this.isLastStep = true;\r\n            let coeff = this.lastStepFindToPrintKnownCoeff();\r\n            this.printKnownCoeff(coeff);\r\n            this.printPolynomWithSubstitution(coeff);\r\n            this.createPolynomCoeffEquation(this.polynom);\r\n            this.lastStep();\r\n            this.pushLog(this.matrix.matrix);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Один шаг вычисления таблицы\r\n     * @param reference\r\n     */\r\n    oneStep(reference) {\r\n        this.pushDebug();\r\n        this.swap(reference.x, reference.y);\r\n        if (this.head[reference.x] > this.originPolynomSize) {\r\n            this.removeCol(reference.x);\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * автоматическое вычисление и вывод результата\r\n     */\r\n    calc() {\r\n        let l = this.matrix.height - 1;\r\n        for (let i = 0; i < l; i++) {\r\n            let opor = this.findReference();\r\n            console.log(opor);\r\n\r\n            this.swap(opor.x, opor.y);\r\n            this.removeCol(opor.x);\r\n\r\n            this.pushLog(this.matrix.matrix, [], 'Конец вычислений:');\r\n        }\r\n        this.print();\r\n        this.lastStep();\r\n        this.pushLog(this.matrix.matrix);\r\n    }\r\n\r\n    /**\r\n     * Подставляем найденные элементы в полином и находим коэффициенты элементов для последней строки матрицы\r\n     * предпоследний шаг\r\n     */\r\n    lastStep() {\r\n        let matr = this.matrix;\r\n        let matrRaw = matr.matrix;\r\n        let row = [];\r\n\r\n        // calc coefficients\r\n        this.head.forEach((num, headIdx) => {\r\n            let res = this.polynom[num - 1];\r\n            let equation = new PrintEquation();\r\n            equation.push.x(num).equal().fraction(res);\r\n\r\n            for (var j = 0; j < this.matrix.height - 1; j++) {\r\n                let leftRowValue = this.left[j];\r\n                equation.push\r\n                    .plus()\r\n                    .fraction(this.polynom[leftRowValue - 1])\r\n                    .mul()\r\n                    .fraction(matr.getElem(j, headIdx).neg());\r\n\r\n                res = res.add(matr.getElem(j, headIdx).neg().mul(this.polynom[leftRowValue - 1]));\r\n            }\r\n            row.push(res);\r\n            equation.push.equal().fraction(res);\r\n            this.debug.push({equation});\r\n        });\r\n        // matrRaw[this.matrix.height - 1] = row;\r\n\r\n        // calc last coefficient\r\n        let res = getLastItem(this.polynom);\r\n\r\n        // helper row\r\n        let equationEx = new PrintEquation();\r\n        equationEx.push\r\n            .word('p')\r\n            .equal();\r\n        this.left.forEach((leftValue, rowIdx) => {\r\n            equationEx.push\r\n                .plus().x(leftValue)\r\n                .mul()\r\n                .word('b[').x(leftValue).word(']');\r\n        });\r\n        equationEx.push\r\n            .plus()\r\n            .fraction(getLastItem(this.polynom));\r\n        this.debug.push({equation: equationEx});\r\n\r\n        let equation = new PrintEquation();\r\n        equation.push\r\n            .word('p')\r\n            .equal();\r\n\r\n        let lastCol = this.matrix.width - 1;\r\n        this.left.forEach((leftValue, rowIdx) => {\r\n            equation.push\r\n                .plus()\r\n                .fraction(this.polynom[leftValue - 1])\r\n                .mul()\r\n                .fraction(matr.getElem(rowIdx, lastCol));\r\n\r\n            res = res.add(matr.getElem(rowIdx, lastCol).mul(this.polynom[leftValue - 1]));\r\n        });\r\n        row.push(res.neg());\r\n        equation.push\r\n            .plus()\r\n            .fraction(getLastItem(this.polynom))\r\n            .equal()\r\n            .fraction(res);\r\n        this.debug.push({equation});\r\n\r\n        matrRaw[this.matrix.height - 1] = row;\r\n    }\r\n\r\n    /**\r\n     * Находит, чему равны коэффициенты в стоблце (left)\r\n     */\r\n    lastStepFindToPrintKnownCoeff(): IPrintEquationVal {\r\n        let coeff: IPrintEquationVal = {};\r\n        const matrix = this.matrix;\r\n        this.left.forEach((k, kIdx) => {\r\n            let equation = new PrintEquation();\r\n            // equation.push.x(k);\r\n            // equation.push.equal();\r\n            for (let i = 0; i < matrix.width; i++) {\r\n                let el = matrix.getElem(kIdx, i);\r\n                if (i !== 0) {\r\n                    equation.push.plus();\r\n                }\r\n                if (i < matrix.width - 1) {\r\n                    equation.push.fraction(el.neg());\r\n                    equation.push.x(this.head[i]);\r\n                } else {\r\n                    equation.push.fraction(el);\r\n                }\r\n            }\r\n            coeff[k] = equation;\r\n        });\r\n        return coeff;\r\n    }\r\n\r\n    /**\r\n     * Распечатывает найденные коэффициенты на предпоследнем шаге\r\n     */\r\n    printKnownCoeff(coeffs: IPrintEquationVal) {\r\n        for (let k in coeffs) {\r\n            if (coeffs.hasOwnProperty(k)) {\r\n                let equation = new PrintEquation();\r\n                equation.push.x(k).equal().arr(coeffs[k].equation);\r\n                this.debug.push({equation});\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Распечатать полином\r\n     * @param polynom\r\n     */\r\n    createPolynomCoeffEquation(polynom) {\r\n        let equation = new PrintEquation();\r\n        const len = polynom.length - 1;\r\n        polynom.forEach((k, idx) => {\r\n            const id = idx + 1;\r\n            equation.push.fraction(k);\r\n            if (idx !== len) {\r\n                equation.push.mul().x(id).plus();\r\n            }\r\n        });\r\n        return equation;\r\n    }\r\n\r\n    polynomEquationAddFreeMember(equation: PrintEquation) {\r\n        let i = this.originPolynomSize + 1;\r\n        this.left.forEach(e => {\r\n            equation.push.plus().x(i++);\r\n        });\r\n        return equation;\r\n    }\r\n\r\n    polynomEquationAddMin(equation: PrintEquation) {\r\n        equation.push.sign(4).word('min');\r\n        return equation;\r\n    }\r\n\r\n    /**\r\n     * Печатаем полином с подстановкой известных переменных\r\n     * @param coeffs\r\n     */\r\n    printPolynomWithSubstitution(coeffs: IPrintEquationVal) {\r\n        let equation = new PrintEquation();\r\n        const len = this.polynom.length - 1;\r\n        this.polynom.forEach((k, idx) => {\r\n            const id = idx + 1;\r\n            equation.push.fraction(k);\r\n            if (idx === len) {\r\n                return;\r\n            }\r\n            equation.push.sign(2);\r\n            if (coeffs.hasOwnProperty(id)) {\r\n                equation.push.word('(').arr(coeffs[id].equation).word(')');\r\n            } else {\r\n                equation.push.x(id);\r\n            }\r\n            equation.push.plus();\r\n        });\r\n        equation.push.arrowMin();\r\n        this.debug.push({equation});\r\n    }\r\n\r\n    /**\r\n     * Преобразование таблицы\r\n     * @param x столбец\r\n     * @param y строка\r\n     */\r\n    swap(x, y) {\r\n        let origMatrix = this.matrix.matrix;\r\n        let matrixInst = this.matrix.clone();\r\n        let matrix = matrixInst.matrix;\r\n        let opor: FractionType = origMatrix[y][x];\r\n\r\n        console.log(\"element: \" + opor.toFraction());\r\n        matrixInst.log();\r\n        this.pushLog(matrix, [y, x], 'Находим опорный элемент:');\r\n\r\n        let buf = this.head[x];\r\n        this.head[x] = this.left[y];\r\n        this.left[y] = buf;\r\n\r\n        // расчет строки y (row)\r\n        for (let i = 0; i < matrixInst.width; i++) {\r\n            matrix[y][i] = origMatrix[y][i].div(opor);\r\n        }\r\n        // расчет столбца x (col)\r\n        for (let i = 0; i < matrixInst.height; i++) {\r\n            matrix[i][x] = origMatrix[i][x].div(opor.neg());\r\n        }\r\n        matrix[y][x] = new Fraction(1).div(opor);\r\n\r\n        if (debugConf.debugRowCol) {\r\n            matrixInst.log();\r\n            this.pushLog(matrix, [y, x], 'Вычисляем строку и колонку:');\r\n        }\r\n\r\n        // вычисляем остальные строки\r\n        let oporaRow = matrixInst.getRow(y);\r\n        for (let i = 0; i < matrixInst.height; i++) {\r\n            if (i === y) continue;\r\n            let coeff = origMatrix[i][x];\r\n            console.log(i, coeff);\r\n            for (let j = 0; j < matrixInst.width; j++) {\r\n                if (j === x) continue;\r\n                matrix[i][j] = origMatrix[i][j].sub(coeff.mul(oporaRow[j]));\r\n            }\r\n            if (debugConf.debugRow) {\r\n                matrixInst.log();\r\n                this.pushLog(matrix, [i, -1], 'Вычитаем строку:');\r\n            }\r\n        }\r\n\r\n        this.matrix = matrixInst;\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * Поиск опорного элемента\r\n     * выбор столбца по минимальному отрицательному элементу\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    findReference() {\r\n        const this_matrix = this.matrix;\r\n        const matrix = this_matrix.matrix;\r\n        const height = this_matrix.height;\r\n        const lastCol = this_matrix.getCol(this_matrix.width - 1);\r\n        const minEls = getMinElements(this_matrix.getRow(this_matrix.height - 1).slice(0, this_matrix.width - 1));\r\n\r\n        let minId;\r\n        let x;\r\n        for (let j = 0; j < minEls.length; j++) {\r\n            const el = minEls[j];\r\n            x = el.id;\r\n\r\n            // индексы ненулевых положительных значений\r\n            let cur;\r\n            let i = 0;\r\n            const possibleIdx = [];\r\n            while (i < height) {\r\n                cur = this_matrix.getElem(i, el.id);\r\n                if (cur.compare(new Fraction(0)) > 0) {\r\n                    possibleIdx.push(i);\r\n                }\r\n                i++;\r\n            }\r\n            if (possibleIdx.length === 0) {\r\n                continue;\r\n            }\r\n            i = possibleIdx[0];\r\n            let minEl = lastCol[i].div(this_matrix.getElem(i, x));\r\n            minId = i;\r\n\r\n            for (let k = 1; k < possibleIdx.length; k++) {\r\n                let num = lastCol[possibleIdx[k]].div(this_matrix.getElem(possibleIdx[k], x));\r\n                if (num.compare(minEl) < 0) {\r\n                    minEl = num;\r\n                    minId = possibleIdx[k];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        if (minId == null) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            x: x,\r\n            y: minId\r\n        };\r\n    }\r\n\r\n    print() {\r\n        let obj = {};\r\n        let txt = '';\r\n        let mtx = this.matrix.matrix;\r\n        this.left.forEach((e, i) => {\r\n            txt += `\\nx${e} = `;\r\n            let xe = `x${e}`;\r\n            obj[xe] = '';\r\n            for (let j = 0; j < this.matrix.width - 1; j++) {\r\n                let multipler = `${mtx[i][j].neg().toFraction()}*x${this.head[j]} + `;\r\n                obj[xe] += multipler;\r\n                txt += multipler;\r\n            }\r\n            let mul = `${mtx[i][this.matrix.width - 1].toFraction()}`;\r\n            txt += mul;\r\n            obj[xe] += mul;\r\n        });\r\n        console.log(txt);\r\n        console.log(obj);\r\n        return txt;\r\n    }\r\n\r\n    /**\r\n     * возращает номер столбца элемента\r\n     * @param ind\r\n     * @returns {number}\r\n     */\r\n    getHeadIndex(ind) {\r\n        let i = this.head.indexOf(ind);\r\n        if (i == -1) throw new Error('index not found');\r\n        return i;\r\n    }\r\n\r\n    /**\r\n     * возращает номер строки элемента\r\n     * @param ind\r\n     * @returns {number}\r\n     */\r\n    getLeftIndex(ind) {\r\n        let i = this.left.indexOf(ind);\r\n        if (i === -1) throw new Error('index not found');\r\n        return i;\r\n    }\r\n\r\n    /**\r\n     * Вычисляем последнюю строку в матрице\r\n     * и домножаем коэффициенты полинома на -1, если стремится к макс\r\n     * тоже самое с граничными условиями\r\n     */\r\n    firstStep() {\r\n        let matr = this.matrix.matrix;\r\n        let {height, width} = this.matrix;\r\n        matr = matr.map((row: FractionType[]) => {\r\n            if (row[row.length - 1].s === -1) {\r\n                return row.map(e => e.neg());\r\n            }\r\n            return row;\r\n        });\r\n        let row = [];\r\n        for (let j = 0; j < width; j++) {\r\n            row.push(0);\r\n            for (let i = 0; i < height; i++) {\r\n                row[j] += matr[i][j];\r\n            }\r\n        }\r\n        row = row.map(e => new Fraction(-e));\r\n        this.matrix.matrix = matr;\r\n        this.matrix.pushRow(row);\r\n\r\n        if (this.polynomDirect === 1) {\r\n            this.polynom = this.polynom.map(e => e.neg());\r\n        }\r\n    }\r\n\r\n    private removeCol(col: number) {\r\n        this.matrix.removeCol(col);\r\n        this.head.splice(col, 1);\r\n    }\r\n\r\n    /**\r\n     * Печатает матрицу с именами строк и столбцов, и выделяет элемент или всю строку\r\n     * @param matrix\r\n     * @param select\r\n     * @param text\r\n     */\r\n    pushLog(matrix: FractMatrix, select?: number[], text?: string) {\r\n        this.debug.push({\r\n            m: new MatrixM(matrix),\r\n            p: [copyArr(this.head), copyArr(this.left)],\r\n            select: select || null,\r\n            text: text || null\r\n        });\r\n    }\r\n\r\n    pushDebug() {\r\n        this.debug.push({\r\n            m: new MatrixM(this.matrix.matrix),\r\n            p: [copyArr(this.head), copyArr(this.left)],\r\n            backup: true,\r\n            isLastStep: this.isLastStep\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Проверка симплекс таблицы на допустимость\r\n     * ???\r\n     */\r\n    checkValidSolution() {\r\n        const matr = this.matrix;\r\n        const col = matr.getCol(matr.width - 1);\r\n        return col.every((el, idx) => {\r\n            if (idx === matr.height - 1) {\r\n                return true;\r\n            }\r\n            return (el.compare(new Fraction(0)) > 0);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Проверка на оптимальность\r\n     * решение оптимально, если все числа в последней строке больше нуля\r\n     */\r\n    checkOptimalSolution() {\r\n        const matr = this.matrix;\r\n        const lastRow = matr.getRow(matr.height - 1);\r\n        return lastRow.every((el, idx) => {\r\n            if (idx === matr.height - 1) {\r\n                return true;\r\n            }\r\n            return ((el.compare(new Fraction(0))) > 0);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * восстановление данных из лога\r\n     * @param debugInfo\r\n     * @returns {boolean}\r\n     */\r\n    restoreMatrixFromDebug(debugInfo: IDebug) {\r\n        if (debugInfo.m && debugInfo.p && debugInfo.p.length === 2) {\r\n            this.matrix = debugInfo.m;\r\n            this.head = debugInfo.p[0];\r\n            this.left = debugInfo.p[1];\r\n            this.isLastStep = debugInfo.isLastStep;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Окончательный шаг, вывод коэффициентов\r\n     */\r\n    showResult() {\r\n        let matr = this.matrix;\r\n        let equation = new PrintEquation();\r\n        equation.push\r\n            .word('x*')\r\n            .equal()\r\n            .word('(');\r\n\r\n        let coeff = this.getLastColCoeff();\r\n        for (let i = 1; i <= this.originPolynomSize; i++) {\r\n            let num = coeff.hasOwnProperty(i) ? coeff[i] : 0;\r\n            equation.push.fraction(num);\r\n            if (i !== this.originPolynomSize) {\r\n                equation.push.word(', ');\r\n            }\r\n        }\r\n        equation.push.word(')');\r\n\r\n        this.debug.push({text: 'Ответ:'});\r\n        this.debug.push({equation});\r\n        let equation2 = new PrintEquation();\r\n        equation2.push\r\n            .word('f*')\r\n            .equal()\r\n            .fraction(matr.getElem(matr.height - 1, matr.width - 1).neg());\r\n        this.debug.push({equation: equation2});\r\n    }\r\n\r\n    /**\r\n     * Возвращает объект с номером коэффициента и значением в последнем столбце\r\n     */\r\n    getLastColCoeff() {\r\n        let matr = this.matrix;\r\n        const len = matr.height - 1;\r\n        let lastCol = {};\r\n        for (let i = 0; i < len; i++) {\r\n            lastCol[this.left[i]] = matr.getElem(i, matr.width - 1);\r\n        }\r\n        return lastCol;\r\n    }\r\n}\r\n\r\n/**\r\n * Минимальный отрицательный элемент\r\n * @param arr\r\n * @returns {number|any}\r\n */\r\nfunction getIndMinEl(arr: FractionType[]): number {\r\n    let max, maxId;\r\n    let i = 0;\r\n\r\n    while (i < arr.length && arr[i].s === 1) {\r\n        i++;\r\n    }\r\n    max = arr[i];\r\n    maxId = i;\r\n\r\n    for (; i < arr.length; i++) {\r\n        if (arr[i].s === -1 && arr[i].compare(max) > 0) {\r\n            max = arr[i];\r\n            maxId = i;\r\n        }\r\n    }\r\n    return maxId;\r\n}\r\n\r\n/**\r\n * Минимальный отрицательный элемент\r\n * @param arr\r\n * @returns {number|any}\r\n */\r\nfunction getMinElements(arr: FractionType[]) {\r\n    const els = [];\r\n    arr.forEach((el, id) => {\r\n        if (el.s === 1 || el.n === 0) return;\r\n        els.push({id, value: el});\r\n    });\r\n    return els.sort((a, b) => {\r\n        return a.value.compare(b.value);\r\n    });\r\n}"],"sourceRoot":"/source/"}