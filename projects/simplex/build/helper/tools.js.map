{"version":3,"sources":["helper/tools.ts"],"names":[],"mappings":"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","file":"helper/tools.js","sourcesContent":["import {FractionType} from 'fraction.js';\n\nexport function arrayHas<T>(arr: T[], element: T): boolean {\n    return arr.indexOf(element) !== -1;\n}\n\nexport function createArray(n) {\n    let a = [];\n    for (var i = 0; i < n; i++) {\n        a.push(0);\n    }\n    return a;\n}\n\nexport function getLastItem(arr: any[]) {\n    return arr[arr.length - 1];\n}\n\nexport function createMatrix(w: number, h: number) {\n    let matrix = [];\n    for (let i = 0; i < h; i++) {\n        matrix[i] = [];\n        for (let j = 0; j < w; j++) {\n            matrix[i].push('');\n        }\n    }\n    return matrix;\n}\n\nexport function changeSizeMatrix(matrix: any[][], size: number[]) {\n    const width = size[0];\n    const height = size[1];\n    if (height > matrix.length) {\n        for (let i = matrix.length; i < height; i++) {\n            matrix.push([]);\n        }\n    } else {\n        matrix.length = height;\n    }\n    matrix.map((row) => {\n        if (width > row.length) {\n            for (let i = row.length; i < width; i++) {\n                row.push('');\n            }\n        } else {\n            row.length = width;\n        }\n        return row;\n    });\n    return matrix;\n}\n\nexport function getArrIndex(from: number, to: number): number[] {\n    let arr = [];\n    for (var i = from; i <= to; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\n\n/**\n * Создает копию массива либо создает через функцию copy\n * @param arr\n * @param copy\n * @returns {T[]}\n */\nexport function copyArr<T>(arr: T[], copy?: (elem: T) => T): T[] {\n    if (copy) {\n        return arr.map((e) => {\n            return copy(e);\n        });\n    } else {\n        return arr.slice();\n    }\n}\n\nexport function mulVec(vec: FractionType[], f: (el: FractionType, i: number) => FractionType) {\n    return vec.map((e, i) => {\n        let t = f(e, i);\n        return t !== undefined ? t : e;\n    })\n}\n\nexport var isArray = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":"/source/"}