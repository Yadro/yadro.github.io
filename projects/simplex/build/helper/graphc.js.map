{"version":3,"sources":["helper/graphc.ts"],"names":[],"mappings":"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","file":"helper/graphc.js","sourcesContent":["///<reference path=\"../../typings/index.d.ts\"/>\r\nimport * as Snap from '../../node_modules/snapsvg/dist/snap.svg';\r\n\r\nexport class GraphC {\r\n    lineStyle = {\r\n        stroke: '#000',\r\n        strokeWidth: 2\r\n    };\r\n    fontAxisY = {\r\n        fontFamily: 'Source Sans Pro',\r\n        textAnchor: 'middle'\r\n    };\r\n    fontAxisX = {\r\n        fontFamily: 'Source Sans Pro',\r\n        textAnchor: 'middle'\r\n    };\r\n    padding = 60;\r\n\r\n    paper: Snap.Paper;\r\n    sizeSvg = [800, 600];\r\n\r\n    start: number[];\r\n    size: number;\r\n    count: number;\r\n\r\n    graphs: number[][];\r\n    coords: number[][] = [];\r\n    extremum: number[];\r\n    segment;\r\n\r\n\r\n    constructor(id, graphs) {\r\n        this.paper = Snap(id || 'svg');\r\n        this.graphs = graphs;\r\n\r\n        graphs.forEach((el) => {\r\n            this.coords.push(this.calcCoords(el));\r\n        });\r\n\r\n        let extr;\r\n        this.extremum = extr = this.getExtremum();\r\n\r\n        // определяем размер сегмента\r\n        this.count = extr[5] - extr[4];\r\n        this.size = Math.min(this.sizeSvg[0], this.sizeSvg[1]) - this.padding;\r\n        this.segment = this.size / this.count;\r\n\r\n        // считаем начало координат\r\n        let x_min = extr[0],\r\n            x_max = extr[1],\r\n            y_min = extr[2],\r\n            y_max = extr[3];\r\n        let graphW = (x_max - x_min) * this.segment,\r\n            graphH = (y_max - y_min) * this.segment;\r\n\r\n        this.start = [\r\n            this.sizeSvg[0] / 2 - graphW / 2 - x_min * this.segment,\r\n            this.sizeSvg[1] / 2 - graphH / 2 + y_max * this.segment\r\n        ];\r\n\r\n        this.drawAxis();\r\n        this.drawAxis(true);\r\n\r\n        this.drawGraphics();\r\n    }\r\n\r\n    /**\r\n     * Отрисовка оси координат\r\n     * @param vert\r\n     */\r\n    drawAxis(vert?) {\r\n        let paper = this.paper,\r\n            size = this.size,\r\n            count = this.count,\r\n            segm = this.segment;\r\n\r\n        let startX = this.start[0] + .5,\r\n            startY = this.start[1] + .5,\r\n            endX, endY;\r\n\r\n        if (vert) {\r\n            segm *= -1;\r\n            endY = startY - size;\r\n            endX = startX;\r\n        } else {\r\n            endX = startX + size;\r\n            endY = startY;\r\n        }\r\n\r\n        let line;\r\n        if (vert) {\r\n            line = paper.line(\r\n                startX, startY - this.extremum[2] * this.segment,\r\n                startX, startY - this.extremum[3] * this.segment\r\n            );\r\n        } else {\r\n            line = paper.line(\r\n                startX + this.extremum[0] * this.segment, startY,\r\n                startX + this.extremum[1] * this.segment, startY\r\n            );\r\n        }\r\n        line.attr(this.lineStyle);\r\n\r\n        for (let i = Math.floor(this.extremum[4]); i <= Math.floor(this.extremum[5]); i++) {\r\n            let localX = vert ? startX : startX + i * segm;\r\n            let localY = vert ? startY + i * segm : startY;\r\n\r\n            if (vert) {\r\n                if (i != 0) {\r\n                    paper.text(localX - 15, localY + 5, \"\" + i)\r\n                        .attr(this.fontAxisY);\r\n                }\r\n                paper.line(localX, localY, localX - 5, localY)\r\n                    .attr(this.lineStyle);\r\n            } else {\r\n                if (i != 0) {\r\n                    paper.text(localX, localY + 20, \"\" + i)\r\n                        .attr(this.fontAxisX);\r\n                }\r\n                paper.line(localX, localY, localX, localY + 5)\r\n                    .attr(this.lineStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Отрисовка графиков\r\n     */\r\n    drawGraphics() {\r\n        let start = this.start,\r\n            angle = this.segment;\r\n\r\n        this.coords.forEach((coord) => {\r\n            let sign = 1;\r\n            coord = coord.map((e, i) => {\r\n                sign = (i % 2) ? -1 : 1; // invert axisY\r\n                return start[i % 2] + e * angle * sign;\r\n            });\r\n\r\n            let line = this.paper.line(coord[0], coord[1], coord[2], coord[3])\r\n                .attr(this.lineStyle);\r\n\r\n            this.paper.line(coord[0], coord[1], coord[2], coord[3])\r\n                .attr({\r\n                    stroke: '#0f0',\r\n                    opacity: 0,\r\n                    strokeWidth: 10\r\n                })\r\n                .hover((e) => {\r\n                    line.attr({stroke: '#f00'});\r\n                }, (e) => {\r\n                    line.attr(this.lineStyle);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Поиск точек пересечения с осями координат\r\n     * @param equation\r\n     *\r\n     * @example\r\n     * ax_1 + bx_2 = c\r\n     * x_1 = (-bx_2 + c) / a\r\n     * x_2 = (-ax_1 + c) / b\r\n     */\r\n    calcCoords(equation: number[]) {\r\n        if (equation.length < 3) return;\r\n\r\n        let a = equation[0],\r\n            b = equation[1],\r\n            c = equation[2];\r\n\r\n        if (a == 0 && b == 0) {\r\n            return [0, 0, 0, 0];\r\n        }\r\n        if (!a) {\r\n            return [\r\n                0, c / b,\r\n                1, c / b\r\n            ];\r\n        }\r\n        if (!b) {\r\n            return [\r\n                c / a, 0,\r\n                c / a, 1,\r\n            ];\r\n        }\r\n\r\n        return [\r\n            c / a, 0,   // = x1, x2 = 0\r\n            0, c / b    // = x2, x1 = 0\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Поиск точек экстремума графиков на осях\r\n     *  0 - x_min\r\n     *  1 - x_max\r\n     *  2 - y_min\r\n     *  3 - y_max\r\n     *  4 - min(x_min, y_min)\r\n     *  5 - max(x_max, y_max)\r\n     * @returns {number[]}\r\n     */\r\n    getExtremum() {\r\n        let x = [];\r\n        let y = [];\r\n        this.coords.forEach((coord) => {\r\n            coord.forEach((el, i) => {\r\n                if (i % 2) {\r\n                    y.push(el);\r\n                } else {\r\n                    x.push(el);\r\n                }\r\n            });\r\n        });\r\n        let sort = (a,b) => a > b ? 1 : -1;\r\n        x = x.sort(sort);\r\n        y = y.sort(sort);\r\n        return [\r\n            x[0], x[x.length - 1],\r\n            y[0], y[y.length - 1],\r\n            Math.min(x[0], y[0]),\r\n            Math.max(x[x.length - 1], y[y.length - 1])\r\n        ]\r\n    }\r\n}"],"sourceRoot":"/source/"}