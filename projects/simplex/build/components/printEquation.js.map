{"version":3,"sources":["components/printEquation.tsx"],"names":[],"mappings":";;;;;;;IAcA,IAAM,KAAK,GAAG;QACV,IAAI,EAAE,KAAK;QACX,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,UAAU;QACb,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,UAAU;KAChB,CAAC;IAMF;QAA+C,qCAAwC;QAmCnF,2BAAY,KAAyB;YACjC,kBAAM,KAAK,CAAC,CAAC;YAnCjB;;eAEG;YACH,aAAQ,GAAe;gBACnB,EAAC,CAAC,EAAE,CAAC,EAAC;gBACN,EAAC,IAAI,EAAE,CAAC,EAAC;gBAET,EAAC,IAAI,EAAE,CAAC,EAAC;gBACT,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;gBAC9B,EAAC,CAAC,EAAE,CAAC,EAAC;gBACN,EAAC,IAAI,EAAE,CAAC,EAAC;gBACT,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;gBAC/B,EAAC,CAAC,EAAE,CAAC,EAAC;gBAEN,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC;gBACV,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;gBAC9B,EAAC,CAAC,EAAE,CAAC,EAAC;gBACN,EAAC,IAAI,EAAE,CAAC,CAAC,EAAC;gBACV,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;gBAC/B,EAAC,CAAC,EAAE,CAAC,EAAC;gBAEN;oBACI,EAAC,IAAI,EAAE,CAAC,EAAC;oBACT,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAC;oBAC3B,EAAC,IAAI,EAAE,CAAC,EAAC;oBACT,EAAC,IAAI,EAAE,GAAG,EAAC;oBACX,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;oBAC/B,EAAC,CAAC,EAAE,CAAC,EAAC;oBACN,EAAC,IAAI,EAAE,CAAC,EAAC;oBACT,EAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAC;oBAC5B,EAAC,IAAI,EAAE,GAAG,EAAC;iBACd;aACJ,CAAC;YAIE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7E,CAAC;QAED,+BAAG,GAAH,UAAI,KAAK;YACL,MAAM,CAAC,UAAQ,KAAK,WAAQ,CAAC;QACjC,CAAC;QAED,qCAAS,GAAT,UAAU,EAAY,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YAClC,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAClC,GAAG,IAAI,UAAU,CAAC;gBACtB,CAAC;gBACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpE,mBAAmB;oBACnB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACnC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC3B,kBAAkB;4BAClB,GAAG,IAAI,IAAI,CAAC;wBAEhB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,iBAAiB;4BACjB,GAAG,IAAI,IAAI,CAAC;wBAChB,CAAC;wBACD,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC9B,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/E,oBAAoB;oBACpB,GAAG,IAAI,KAAK,CAAC;oBACb,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAC9B,CAAC;gBACD,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,IAAI,OAAO,CAAC;YACnB,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,iCAAK,GAAL,UAAM,GAA8B;YAApC,iBAYC;YAXG,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,IAAI,GAAa,EAAE,CAAC;YACxB,GAAG,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,GAAG;gBAChB,EAAE,CAAC,CAAC,eAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACd,GAAG,IAAI,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC1B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,GAAG,GAAG,KAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC7C,CAAC;gBACD,IAAI,GAAG,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,kCAAM,GAAN;YACI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,CAAC,qBAAC,GAAG,IAAC,uBAAuB,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,EAAO,CAAA;QAC9D,CAAC;QACL,wBAAC;IAAD,CApGA,AAoGC,CApG8C,KAAK,CAAC,SAAS,GAoG7D;IApGD;uCAoGC,CAAA;IAED;QAGI;YAHJ,iBAyEC;YAxEG,aAAQ,GAAe,EAAE,CAAC;YAM1B,SAAI,GAAG;gBACH,CAAC,EAAE,UAAC,GAAG;oBACH,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,IAAI,EAAE,UAAC,IAAI;oBACP,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACpB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,IAAI,EAAE;oBACF,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,KAAK,EAAE;oBACH,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,GAAG,EAAE;oBACD,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,KAAK,EAAE;oBACH,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,IAAI,EAAE,UAAC,IAAI;oBACP,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACpB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,QAAQ,EAAE,UAAC,QAAQ;oBACf,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBAC5B,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,GAAG,EAAE,UAAC,GAAG;oBACL,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACjC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACrC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC5B,CAAC;oBACD,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;gBACD,QAAQ,EAAE;oBACN,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC9B,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;aACJ,CAAC;YAhDE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACvB,CAAC;QAiDD,6BAAK,GAAL,UAAM,GAAG;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,GAAG,EAAC,CAAC,CAAC;QACjC,CAAC;QAED,gCAAQ,GAAR,UAAS,IAAI;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAA,IAAI,EAAC,CAAC,CAAC;QAC/B,CAAC;QAED,gCAAQ,GAAR,UAAS,IAAI;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAA,IAAI,EAAC,CAAC,CAAC;QAC/B,CAAC;QAED,oCAAY,GAAZ,UAAa,QAAQ;YACjB,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,UAAA,QAAQ,EAAC,CAAC,CAAC;QACnC,CAAC;QACL,oBAAC;IAAD,CAzEA,AAyEC,IAAA;IAzEY,qBAAa,gBAyEzB,CAAA","file":"components/printEquation.js","sourcesContent":["///<reference path=\"../../typings/index.d.ts\"/>\r\n///<reference path=\"../helper/fraction.js.d.ts\"/>\r\nimport * as React from 'react';\r\nimport Fraction = require('fraction');\r\nimport {FractionType} from \"../helper/fraction.js\";\r\nimport {isArray} from '../helper/tools';\r\n\r\ninterface Equation {\r\n    x?: number;\r\n    sign?: number;\r\n    word?: string;\r\n    fraction?: FractionType;\r\n}\r\n\r\nconst signs = {\r\n    '-1': ' - ',\r\n    0: ' = ',\r\n    1: ' + ',\r\n    2: '&middot;',\r\n    3: ' : ',\r\n    4: ' &rarr; '\r\n};\r\n\r\ninterface PrintEquationCompP {\r\n    equation: PrintEquation;\r\n}\r\n\r\nexport default class PrintEquationComp extends React.Component<PrintEquationCompP, any> {\r\n    /**\r\n     * @example x1 = + 1/2·x1 - 1/2·x2 - 1/2·x3 + 1/2·x4 + 5(-1/2·x4 + 10)\r\n     */\r\n    equation: Equation[] = [\r\n        {x: 1},\r\n        {sign: 0},\r\n\r\n        {sign: 1},\r\n        {fraction: new Fraction(1, 2)},\r\n        {x: 1},\r\n        {sign: 1},\r\n        {fraction: new Fraction(-1, 2)},\r\n        {x: 2},\r\n\r\n        {sign: -1},\r\n        {fraction: new Fraction(1, 2)},\r\n        {x: 3},\r\n        {sign: -1},\r\n        {fraction: new Fraction(-1, 2)},\r\n        {x: 4},\r\n\r\n        [\r\n            {sign: 1},\r\n            {fraction: new Fraction(5)},\r\n            {sign: 2},\r\n            {word: '('},\r\n            {fraction: new Fraction(-1, 2)},\r\n            {x: 4},\r\n            {sign: 1},\r\n            {fraction: new Fraction(10)},\r\n            {word: ')'},\r\n        ],\r\n    ];\r\n\r\n    constructor(props: PrintEquationCompP) {\r\n        super(props);\r\n        this.equation = props.equation ? props.equation.equation : this.equation;\r\n    }\r\n\r\n    sub(value) {\r\n        return `<sub>${value}</sub>`;\r\n    }\r\n\r\n    parseFunc(el: Equation, idx, buf, last) {\r\n        if (el.hasOwnProperty('x')) {\r\n            if (last.hasOwnProperty('fraction')) {\r\n                buf += '&middot;';\r\n            }\r\n            buf += 'x' + this.sub(el.x);\r\n        } else if (el.hasOwnProperty('sign')) {\r\n            buf += signs[el.sign];\r\n        } else if (el.hasOwnProperty('fraction')) {\r\n            let fraction = el.fraction;\r\n            if (last.hasOwnProperty('sign') && last.sign !== 0 && last.sign !== 2) {\r\n                // \"- -1\" or \"+ -1\"\r\n                if (fraction.s === -1) {\r\n                    buf = buf.slice(0, buf.length - 2);\r\n                    if (fraction.s === last.sign) {\r\n                        // \"- -1\" => \"+ 1\"\r\n                        buf += \"+ \";\r\n\r\n                    } else {\r\n                        // \"+ -1\" => \"-1\"\r\n                        buf += \"- \";\r\n                    }\r\n                    fraction = fraction.neg();\r\n                }\r\n            } else if (last.hasOwnProperty('word') && last.word === ')' && fraction.s === -1) {\r\n                // \") -1\" => \") - 1\"\r\n                buf += \" - \";\r\n                fraction = fraction.neg();\r\n            }\r\n            buf += fraction.toFraction();\r\n        } else if (el.hasOwnProperty('word')) {\r\n            buf += el.word;\r\n        } else {\r\n            buf += '{???}';\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    parse(arr: Equation[] | Equation[][]) {\r\n        let buf = '';\r\n        let last: Equation = {};\r\n        arr.forEach((el, idx) => {\r\n            if (isArray(el)) {\r\n                buf += this.parse(el);\r\n            } else {\r\n                buf = this.parseFunc(el, idx, buf, last);\r\n            }\r\n            last = el;\r\n        });\r\n        return buf;\r\n    }\r\n\r\n    render() {\r\n        let res = this.parse(this.equation);\r\n        return <div dangerouslySetInnerHTML={{__html: res}}></div>\r\n    }\r\n}\r\n\r\nexport class PrintEquation {\r\n    equation: Equation[] = [];\r\n\r\n    constructor() {\r\n        this.equation = [];\r\n    }\r\n\r\n    push = {\r\n        x: (num) => {\r\n            this.pushX(num);\r\n            return this.push;\r\n        },\r\n        sign: (sign) => {\r\n            this.pushSign(sign);\r\n            return this.push;\r\n        },\r\n        plus: () => {\r\n            this.pushSign(1);\r\n            return this.push;\r\n        },\r\n        minus: () => {\r\n            this.pushSign(-1);\r\n            return this.push;\r\n        },\r\n        mul: () => {\r\n            this.pushSign(2);\r\n            return this.push;\r\n        },\r\n        equal: () => {\r\n            this.pushSign(0);\r\n            return this.push;\r\n        },\r\n        word: (word) => {\r\n            this.pushWord(word);\r\n            return this.push;\r\n        },\r\n        fraction: (fraction) => {\r\n            this.pushFraction(fraction);\r\n            return this.push;\r\n        },\r\n        arr: (arr) => {\r\n            if (arr.hasOwnProperty('equation')) {\r\n                this.equation.push(arr.equation);\r\n            } else {\r\n                this.equation.push(arr);\r\n            }\r\n            return this.push;\r\n        },\r\n        arrowMin: () => {\r\n            this.push.sign(4).word('min');\r\n            return this.push;\r\n        }\r\n    };\r\n\r\n    pushX(num) {\r\n        this.equation.push({x: num});\r\n    }\r\n\r\n    pushSign(sign) {\r\n        this.equation.push({sign});\r\n    }\r\n\r\n    pushWord(word) {\r\n        this.equation.push({word});\r\n    }\r\n\r\n    pushFraction(fraction) {\r\n        if (typeof fraction === \"number\") {\r\n            console.log('this is not fraction');\r\n            fraction = new Fraction(fraction);\r\n        }\r\n        this.equation.push({fraction});\r\n    }\r\n}"],"sourceRoot":"/source/"}