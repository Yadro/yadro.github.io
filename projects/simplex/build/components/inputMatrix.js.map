{"version":3,"sources":["components/inputMatrix.tsx"],"names":[],"mappings":"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","file":"components/inputMatrix.js","sourcesContent":["///<reference path=\"../../typings/index.d.ts\"/>\r\n\r\nimport * as React from 'react';\r\nimport Fraction = require('../../node_modules/fraction.js/fraction');\r\nimport {MatrixM} from \"../helper/matrix\";\r\nimport {createMatrix, createArray, changeSizeMatrix, isArray} from  '../helper/tools';\r\nimport {downloadFile} from \"../helper/fileLoad\";\r\n\r\ninterface InputMatrixP {\r\n    matrix;\r\n    polynom;\r\n    callback: (matr, polynom) => any;\r\n    showCalc: boolean;\r\n}\r\n\r\ninterface InputMatrixS {\r\n    polynom: number[]\r\n    matrix;\r\n    width: number;\r\n    height: number;\r\n    polynomDirect;\r\n    errorMsg: string;\r\n}\r\n\r\n/**\r\n * Класс рисующий поля для ввода коэффициентов матрицы\r\n * Также сохраняет и восстанавливает её из localStorage\r\n */\r\nexport default class InputMatrix extends React.Component<InputMatrixP, InputMatrixS> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let matr = localStorage.getItem('matrix');\r\n        let polynom = localStorage.getItem('polynom');\r\n\r\n        if (matr) {\r\n            matr = JSON.parse(matr);\r\n        } else {\r\n            matr = null;\r\n        }\r\n        let restorePolDir;\r\n        if (polynom) {\r\n            polynom = JSON.parse(polynom);\r\n            restorePolDir = polynom.pop();\r\n        } else {\r\n            polynom = null;\r\n        }\r\n\r\n        let width = matr ? matr[0].length : 3;\r\n        this.state = {\r\n            polynom: polynom || createArray(width),\r\n            polynomDirect: restorePolDir || -1,\r\n            matrix: matr || createMatrix(3, 3),\r\n            width: width,\r\n            height:  matr ? matr.length : 3,\r\n            errorMsg: ''\r\n        };\r\n        this.selectChange = this.selectChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.hasOwnProperty('polynom') && isArray(nextProps.polynom)\r\n            && nextProps.hasOwnProperty('matrix')) {\r\n            let polynom = nextProps.polynom.slice();\r\n            let polynomDirect = polynom.pop();\r\n            this.setState({\r\n                polynom: polynom,\r\n                polynomDirect,\r\n                matrix: nextProps.matrix,\r\n                width: nextProps.polynom.length,\r\n                height:  nextProps.matrix.length,\r\n            } as InputMatrixS)\r\n        }\r\n    }\r\n\r\n    onChange(el, e) {\r\n        const value = e.target.value;\r\n        let matrix = this.state.matrix;\r\n        const pos = el.split(',');\r\n        const i = +pos[0], j = +pos[1];\r\n\r\n        if (pos.length == 2 && i < matrix.length && j < matrix[i].length) {\r\n            matrix[i][j] = value;\r\n            this.setState({matrix} as InputMatrixS);\r\n        } else {\r\n            throw new Error(\"Ошибка ввода параметра матрицы\");\r\n        }\r\n    }\r\n\r\n    onPolynomChange(n, e) {\r\n        const value = e.target.value;\r\n        let polynom = this.state.polynom;\r\n        polynom[n] = value;\r\n        this.setState({polynom} as InputMatrixS);\r\n    }\r\n\r\n    setSize(rot: 'width' | 'height', e) {\r\n        let obj = {};\r\n        const {height, width, matrix} = this.state;\r\n        let size = [width, height];\r\n        let setSize = +e.target.value;\r\n        if (setSize > 0 && setSize <= 16) {\r\n            obj[rot] = setSize;\r\n            if (rot == 'width') {\r\n                size[0] = setSize;\r\n            } else {\r\n                size[1] = setSize;\r\n            }\r\n            obj['matrix'] = changeSizeMatrix(matrix, size);\r\n            obj['polynom'] = createArray(size[0]);\r\n            this.setState(obj as InputMatrixS);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * сохраняем матрицу и полином\r\n     */\r\n    verify() {\r\n        const {matrix, polynomDirect} = this.state;\r\n        let polynom = this.state.polynom.slice();\r\n        polynom.push(polynomDirect);\r\n        let matrixFract = [];\r\n        let error = false;\r\n\r\n        matrix.forEach((row, i) => {\r\n            matrixFract.push([]);\r\n            row.forEach((el, j) => {\r\n                try {\r\n                    matrixFract[i].push(new Fraction(el));\r\n                } catch (e) {\r\n                    error = true;\r\n                    console.log(i + \" \" + j, e);\r\n                }\r\n            })\r\n        });\r\n\r\n        if (error) {\r\n            this.setState({\r\n                errorMsg: 'Введенные коэффициенты содержат недопустимые символы'\r\n            } as InputMatrixS);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let parseMatrix = new MatrixM(matrixFract);\r\n\r\n            localStorage.setItem('matrix', JSON.stringify(matrix));\r\n            localStorage.setItem('polynom', JSON.stringify(polynom));\r\n\r\n            this.props.callback(parseMatrix, polynom);\r\n        } catch (e) {\r\n            this.setState({\r\n                errorMsg: 'Введенные коэффициенты содержат недопустимые символы'\r\n            } as InputMatrixS)\r\n        }\r\n    }\r\n\r\n    rowPoly() {\r\n        const polynom = this.state.polynom;\r\n        return (\r\n            <div key={polynom.length}>{\r\n                polynom.map((el, index) => (\r\n                    <input type=\"text\" key={index} value={el}\r\n                           onChange={this.onPolynomChange.bind(this, index)}/>\r\n                ))}\r\n                <span>&rarr;</span>\r\n                {this.selectRender()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectChange(e) {\r\n        this.setState({polynomDirect: +e.target.value} as InputMatrixS);\r\n    }\r\n\r\n    selectRender() {\r\n        return (\r\n            <select defaultValue={this.state.polynomDirect}\r\n                    onChange={this.selectChange}>\r\n                <option value=\"-1\">min</option>\r\n                <option value=\"1\">max</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n    rowRender(row: Fraction[], index) {\r\n        let i = 0;\r\n        return row.map(el => (\r\n            <input type=\"text\" key={i} value={el}\r\n                   onChange={this.onChange.bind(this, index + ',' + i++)}/>)\r\n        );\r\n    }\r\n\r\n    saveToJson() {\r\n        let obj = {};\r\n        let poly = this.state.polynom;\r\n        poly.push(this.state.polynomDirect);\r\n        obj['matrix'] = this.state.matrix;\r\n        obj['polynom'] = poly;\r\n        downloadFile(JSON.stringify(obj));\r\n    }\r\n\r\n    render() {\r\n        let i = 0;\r\n        const matrix = this.state.matrix;\r\n        const matrixComp = matrix.map((row) => (\r\n            <div key={i}>\r\n                {this.rowRender(row, i++)}\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.saveToJson.bind(this)}>download</button>\r\n                <div>\r\n                    <label>Число коэффициентов полинома:</label>\r\n                    <input type=\"text\"\r\n                           value={this.state.width}\r\n                           onChange={this.setSize.bind(this, 'width')}/>\r\n                </div>\r\n                <div>\r\n                    <label>Число граничных условий:</label>\r\n                    <input type=\"text\"\r\n                           value={this.state.height}\r\n                           onChange={this.setSize.bind(this, 'height')}/>\r\n                </div>\r\n                <div>\r\n                    <span>Полином:</span>\r\n                    {this.rowPoly()}\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Граничные условия:</span>\r\n                    {matrixComp}\r\n                </div>\r\n\r\n                {this.state.errorMsg.length !== 0 ?\r\n                    <div>{this.state.errorMsg}</div> : null\r\n                }\r\n\r\n                {this.props.showCalc ?\r\n                    <button onClick={this.verify.bind(this)}>calc</button>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}