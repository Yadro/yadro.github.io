{"version":3,"sources":["helper/bessel.ts"],"names":[],"mappings":";;IAGA;;OAEG;IACH;QAKI,gBAAY,IAAmB,EAAE,CAAS,EAAE,CAAS;YALzD,iBAyDC;YAnDO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,KAAK,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,wBAAwB;YACxB,IAAI,CAAC,KAAK,GAAG,UAAC,CAAC,IAAK,OAAA,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAA3D,CAA2D,CAAC;QACpF,CAAC;QAED,uBAAM,GAAN,UAAO,CAAS;YACZ,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9B,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACjD,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED;;;;;;WAMG;QACH,4BAAW,GAAX,UAAY,CAAS,EAAE,CAAS,EAAE,KAAoB;YAClD,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,CACH,CAAa,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzF,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAC/F,CAAC;QACN,CAAC;QAED;;;;;WAKG;QACI,aAAM,GAAb,UAAc,CAAS,EAAE,CAAS;YAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACX,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,CAAC;YACD,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC;QAEM,gBAAS,GAAhB,UAAiB,CAAS;YACtB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1B,CAAC,IAAI,CAAC,CAAC;YACX,CAAC;YACD,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QACL,aAAC;IAAD,CAzDA,AAyDC,IAAA;IAzDY,cAAM,SAyDlB,CAAA","file":"helper/bessel.js","sourcesContent":["\nimport {TableDiff} from \"./tableDiff\";\n\n/**\n * Bessel polynomial interpolation\n */\nexport class Bessel {\n    n: number;\n    table: TableDiff;\n    delta: (k) => number;\n\n    constructor(func: (x) => number, h: number, n: number) {\n        this.n = n;\n        this.table = new TableDiff(func, 0, h, 2 * n + 2);\n        //this.table.toString();\n        this.delta = (k) => (this.table.getDelta(k, 0) + this.table.getDelta(k, 1)) / 2;\n    }\n\n    bessel(x: number): number {\n        let result = 0;\n        for (var i = 0; i < this.n; i++) {\n            result += this.bessel_step(x, i, this.delta);\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param t\n     * @param n узел интерполяции\n     * @param delta функция, возвращающая нужный элемент из таблицы разностей\n     * @returns {number}\n     */\n    bessel_step(t: number, n: number, delta: (k) => number): number {\n        let qMul = Bessel.calc_t(t, n);\n        return (\n            (            qMul / Bessel.factorial(2 * n)      * (delta(2 * n)     + delta(2 * n)) / 2) +\n            ((t - 1/2) * qMul / Bessel.factorial(2 * n + 1)) * (delta(2 * n + 1) + delta(2 * n + 1)) / 2\n        );\n    }\n\n    /**\n     * Return t(t-1)(t+1)...(t-n-1)(t+n-1)(t-n)(t + n - 1)\n     * @param t\n     * @param n\n     * @returns number\n     */\n    static calc_t(t: number, n: number) {\n        let c = t;\n        for (let i = 1; i < n; i++) {\n            c *= t - i;\n            c *= t + i;\n        }\n        return c * (t - n) * (t + n - 1);\n    }\n\n    static factorial(n: number) {\n        let c = 1;\n        for (let i = 1; i <= n; i++) {\n            c *= i;\n        }\n        return c;\n    }\n}"],"sourceRoot":"/source/"}