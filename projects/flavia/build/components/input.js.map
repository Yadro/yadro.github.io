{"version":3,"sources":["components/input.tsx"],"names":[],"mappings":";;;;;;;IAQA;QAA4B,0BAAiC;QAEzD,gBAAY,KAAK;YACb,kBAAM,KAAK,CAAC,CAAC;QACjB,CAAC;QAED,yBAAQ,GAAR,UAAS,IAAI,EAAE,CAAgB;YAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QAED,4BAAW,GAAX,UAAY,IAAI,EAAE,KAAK;YACnB,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,GAAG,EAAE,IAAK,GACX,qBAAC,KAAK,IAAC,OAAO,EAAE,IAAK,GAAE,IAAK,CAAQ,EACpC,qBAAC,KAAK,IAAC,IAAI,EAAE,IAAK,EACX,KAAK,EAAE,KAAM,EACb,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,EAAE,CAChD,CACT,CAAA;QACL,CAAC;QAED,uBAAM,GAAN;YACI,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAE/B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;YAED,MAAM,CAAC,CACH,qBAAC,GAAG,SACA,qBAAC,CAAC,8DAAuD,EACxD,UAAW,CACV,CACT,CAAA;QACL,CAAC;QACL,aAAC;IAAD,CAvCA,AAuCC,CAvC2B,KAAK,CAAC,SAAS,GAuC1C;IAvCY,cAAM,SAuClB,CAAA","file":"components/input.js","sourcesContent":["///<reference path=\"../../typings/main.d.ts\"/>\nimport * as React from 'react';\n\ninterface InputCProps {\n    labels: {};\n    callback: (name, value) => void;\n}\n\nexport class InputC extends React.Component<InputCProps, any> {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onChange(name, e: KeyboardEvent) {\n        this.props.callback(name, +e.target.value);\n    }\n\n    createInput(name, value) {\n        return (\n            <div key={name}>\n                <label htmlFor={name}>{name}</label>\n                <input name={name}\n                       value={value}\n                       type=\"number\"\n                       onChange={this.onChange.bind(this, name)}/>\n            </div>\n        )\n    }\n\n    render() {\n        let inputGroup = [];\n        let labels = this.props.labels;\n\n        for (let i in labels) {\n            if (labels.hasOwnProperty(i)) {\n                inputGroup.push(this.createInput(i, labels[i]));\n            }\n        }\n\n        return (\n            <div>\n                <b>alpha * cos(tan(betta * x)) + eps * sin(gamma * x)</b>\n                {inputGroup}\n            </div>\n        )\n    }\n}"],"sourceRoot":"/source/"}