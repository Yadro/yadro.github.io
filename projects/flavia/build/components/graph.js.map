{"version":3,"sources":["components/graph.tsx"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;;;IAQ9C,cAAc,MAAM;QAChB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACzB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACzB,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACrB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,CAAC,UAAC,CAAC;YACL,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAA;IACL,CAAC;IAOD;QAA2B,yBAAgC;QAIvD,eAAY,KAAK;YACb,kBAAM,KAAK,CAAC,CAAC;QACjB,CAAC;QAED,iCAAiB,GAAjB;YACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,4BAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC9D,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAC,CAAC,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;QACnD,CAAC;QAED,kCAAkB,GAAlB;YACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,UAAC,CAAC,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC/E,CAAC;QAED,sBAAM,GAAN;YACI,MAAM,CAAC,CACH,qBAAC,GAAG,SACA,qBAAC,GAAG,IAAC,EAAE,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAE,CAC1C,CACT,CAAA;QACL,CAAC;QACL,YAAC;IAAD,CA5BA,AA4BC,CA5B0B,KAAK,CAAC,SAAS,GA4BzC;IA5BY,aAAK,QA4BjB,CAAA","file":"components/graph.js","sourcesContent":["///<reference path=\"../../typings/main.d.ts\"/>\n\nimport * as React from 'react';\nimport * as Snap from '../../node_modules/snapsvg/dist/snap.svg';\nimport {GraphPolynom} from \"../helper/graph_polynom\";\nimport {TableDiff} from \"../helper/tableDiff\";\nimport {Bessel} from \"../helper/bessel\";\n\nfunction func(params) {\n    let alpha = params.alpha;\n    let betta = params.betta;\n    let eps = params.eps;\n    let gamma = params.gamma;\n    return (x) => {\n        return alpha * Math.cos(Math.tan(betta * x)) + eps * Math.sin(gamma * x);\n    }\n}\n\n\ninterface GraphProps {\n    params;\n}\n\nexport class Graph extends React.Component<GraphProps, any> {\n\n    graph: GraphPolynom;\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        let f = func(this.props.params);\n        this.graph = new GraphPolynom('#svg', [f], this.props.params);\n        let bessel = new Bessel(f, 1, this.props.params.n);\n        this.graph.addGraphic((x) => bessel.bessel(x));\n    }\n\n    componentDidUpdate() {\n        let f = func(this.props.params);\n        let bessel = new Bessel(f, 1, this.props.params.n);\n        this.graph.updateGraphics([f, (x) => bessel.bessel(x)], this.props.params);\n    }\n\n    render() {\n        return (\n            <div>\n                <svg id=\"svg\" width=\"800px\" height=\"600px\"/>\n            </div>\n        )\n    }\n}"],"sourceRoot":"/source/"}